{
  "name": "erlang",
  "rules": {
    "source": {
      "type": "REPEAT",
      "content": {
        "type": "SYMBOL",
        "name": "_expression"
      }
    },
    "_expression": {
      "type": "CHOICE",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "_identifier"
            },
            {
              "type": "SYMBOL",
              "name": "_strings"
            },
            {
              "type": "SYMBOL",
              "name": "character"
            },
            {
              "type": "SYMBOL",
              "name": "integer"
            },
            {
              "type": "SYMBOL",
              "name": "float"
            },
            {
              "type": "SYMBOL",
              "name": "bitstring"
            },
            {
              "type": "SYMBOL",
              "name": "tuple"
            },
            {
              "type": "SYMBOL",
              "name": "list"
            },
            {
              "type": "SYMBOL",
              "name": "map"
            },
            {
              "type": "SYMBOL",
              "name": "record"
            },
            {
              "type": "SYMBOL",
              "name": "binary_operator"
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "("
            },
            {
              "type": "CHOICE",
              "members": [
                {
                  "type": "SYMBOL",
                  "name": "_identifier"
                },
                {
                  "type": "SYMBOL",
                  "name": "_strings"
                },
                {
                  "type": "SYMBOL",
                  "name": "character"
                },
                {
                  "type": "SYMBOL",
                  "name": "integer"
                },
                {
                  "type": "SYMBOL",
                  "name": "float"
                },
                {
                  "type": "SYMBOL",
                  "name": "bitstring"
                },
                {
                  "type": "SYMBOL",
                  "name": "tuple"
                },
                {
                  "type": "SYMBOL",
                  "name": "list"
                },
                {
                  "type": "SYMBOL",
                  "name": "map"
                },
                {
                  "type": "SYMBOL",
                  "name": "record"
                },
                {
                  "type": "SYMBOL",
                  "name": "binary_operator"
                }
              ]
            },
            {
              "type": "STRING",
              "value": ")"
            }
          ]
        }
      ]
    },
    "_identifier": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_atom"
        },
        {
          "type": "SYMBOL",
          "name": "variable"
        }
      ]
    },
    "variable": {
      "type": "PATTERN",
      "value": "[A-Z_][a-zA-Z0-9_@]*"
    },
    "_atom": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "atom"
        },
        {
          "type": "SYMBOL",
          "name": "quoted_atom"
        }
      ]
    },
    "atom": {
      "type": "TOKEN",
      "content": {
        "type": "PATTERN",
        "value": "[a-z][a-zA-Z_@]*"
      }
    },
    "quoted_atom": {
      "type": "SEQ",
      "members": [
        {
          "type": "FIELD",
          "name": "quoted_start",
          "content": {
            "type": "STRING",
            "value": "'"
          }
        },
        {
          "type": "SYMBOL",
          "name": "quoted_content"
        },
        {
          "type": "FIELD",
          "name": "quoted_end",
          "content": {
            "type": "STRING",
            "value": "'"
          }
        }
      ]
    },
    "_strings": {
      "type": "PREC_RIGHT",
      "value": 0,
      "content": {
        "type": "REPEAT1",
        "content": {
          "type": "SYMBOL",
          "name": "string"
        }
      }
    },
    "string": {
      "type": "SEQ",
      "members": [
        {
          "type": "FIELD",
          "name": "quoted_start",
          "content": {
            "type": "STRING",
            "value": "\""
          }
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "escape_sequence"
              },
              {
                "type": "SYMBOL",
                "name": "quoted_content"
              }
            ]
          }
        },
        {
          "type": "FIELD",
          "name": "quoted_end",
          "content": {
            "type": "STRING",
            "value": "\""
          }
        }
      ]
    },
    "escape_sequence": {
      "type": "TOKEN",
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "STRING",
            "value": "\\"
          },
          {
            "type": "CHOICE",
            "members": [
              {
                "type": "PATTERN",
                "value": "[bdefnrstv\\'\\\"\\\\]"
              },
              {
                "type": "PATTERN",
                "value": "x[\\da-fA-F]{2}"
              },
              {
                "type": "PATTERN",
                "value": "x{[\\da-fA-F]+}"
              },
              {
                "type": "PATTERN",
                "value": "[0-7]{1,3}"
              },
              {
                "type": "PATTERN",
                "value": "\\^[a-fA-F]"
              }
            ]
          }
        ]
      }
    },
    "quoted_content": {
      "type": "PATTERN",
      "value": "([^\\\\\\\"\\']+|\\\\)"
    },
    "bitstring": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "<<"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "_items"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "STRING",
          "value": ">>"
        }
      ]
    },
    "tuple": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "{"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "_items"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "STRING",
          "value": "}"
        }
      ]
    },
    "list": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "["
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "_items"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "STRING",
          "value": "]"
        }
      ]
    },
    "map": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "variable"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "STRING",
          "value": "#{"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "ALIAS",
              "content": {
                "type": "SYMBOL",
                "name": "_items"
              },
              "named": true,
              "value": "map_content"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "STRING",
          "value": "}"
        }
      ]
    },
    "record": {
      "type": "PREC_RIGHT",
      "value": 0,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "variable"
              },
              {
                "type": "BLANK"
              }
            ]
          },
          {
            "type": "STRING",
            "value": "#"
          },
          {
            "type": "FIELD",
            "name": "name",
            "content": {
              "type": "SYMBOL",
              "name": "_identifier"
            }
          },
          {
            "type": "CHOICE",
            "members": [
              {
                "type": "SEQ",
                "members": [
                  {
                    "type": "STRING",
                    "value": "{"
                  },
                  {
                    "type": "CHOICE",
                    "members": [
                      {
                        "type": "ALIAS",
                        "content": {
                          "type": "SYMBOL",
                          "name": "_items"
                        },
                        "named": true,
                        "value": "record_content"
                      },
                      {
                        "type": "BLANK"
                      }
                    ]
                  },
                  {
                    "type": "STRING",
                    "value": "}"
                  }
                ]
              },
              {
                "type": "BLANK"
              }
            ]
          }
        ]
      }
    },
    "binary_operator": {
      "type": "CHOICE",
      "members": [
        {
          "type": "PREC_LEFT",
          "value": 0,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "FIELD",
                "name": "left",
                "content": {
                  "type": "SYMBOL",
                  "name": "_expression"
                }
              },
              {
                "type": "FIELD",
                "name": "operator",
                "content": {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "STRING",
                      "value": "="
                    },
                    {
                      "type": "STRING",
                      "value": "+"
                    },
                    {
                      "type": "STRING",
                      "value": "-"
                    },
                    {
                      "type": "STRING",
                      "value": "*"
                    },
                    {
                      "type": "STRING",
                      "value": "/"
                    },
                    {
                      "type": "STRING",
                      "value": "|"
                    },
                    {
                      "type": "STRING",
                      "value": "=>"
                    },
                    {
                      "type": "STRING",
                      "value": ":="
                    },
                    {
                      "type": "STRING",
                      "value": ":"
                    },
                    {
                      "type": "STRING",
                      "value": "++"
                    },
                    {
                      "type": "STRING",
                      "value": "--"
                    },
                    {
                      "type": "STRING",
                      "value": "."
                    }
                  ]
                }
              },
              {
                "type": "FIELD",
                "name": "right",
                "content": {
                  "type": "SYMBOL",
                  "name": "_expression"
                }
              }
            ]
          }
        }
      ]
    },
    "_items": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_expression"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": ","
              },
              {
                "type": "SYMBOL",
                "name": "_expression"
              }
            ]
          }
        }
      ]
    },
    "character": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "$"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "escape_sequence"
            },
            {
              "type": "PATTERN",
              "value": "[\\x20-\\x7e]"
            }
          ]
        }
      ]
    },
    "integer": {
      "type": "CHOICE",
      "members": [
        {
          "type": "PATTERN",
          "value": "[0-9][0-9_]*"
        },
        {
          "type": "PATTERN",
          "value": "[1-3]?[0-9]#[0-9a-zA-Z_]+"
        }
      ]
    },
    "float": {
      "type": "PATTERN",
      "value": "[0-9][0-9_]*\\.[0-9_]+(e-?[0-9]+)?"
    },
    "comment": {
      "type": "SEQ",
      "members": [
        {
          "type": "PREC",
          "value": -1,
          "content": {
            "type": "TOKEN",
            "content": {
              "type": "REPEAT1",
              "content": {
                "type": "STRING",
                "value": "%"
              }
            }
          }
        },
        {
          "type": "FIELD",
          "name": "comment_content",
          "content": {
            "type": "PATTERN",
            "value": ".*"
          }
        }
      ]
    }
  },
  "extras": [
    {
      "type": "PATTERN",
      "value": "[\\r\\n\\t\\f\\v ]+"
    },
    {
      "type": "SYMBOL",
      "name": "comment"
    }
  ],
  "conflicts": [
    [
      "map",
      "_identifier"
    ],
    [
      "record",
      "_identifier"
    ]
  ],
  "precedences": [],
  "externals": [],
  "inline": [],
  "supertypes": []
}

