================================================================================
statements of expressions
================================================================================

{erl_opts, [warnings_as_errors]}.
ok.
error.

--------------------------------------------------------------------------------

(source
  (tuple
    (atom)
    (list
      (atom)))
  (atom)
  (atom))

================================================================================
function declarations
================================================================================

ok_this(Term) -> {ok, Term}.

factorial(N) when N>0 ->
    N * factorial(N - 1);
factorial(1) -> 0.

--------------------------------------------------------------------------------

(source
  (function
    (atom)
    (arguments
      (variable))
    (tuple
      (atom)
      (variable)))
  (function
    (atom)
    (arguments
      (variable))
    (guard
      (binary_operator
        (variable)
        (integer)))
    (binary_operator
      (variable)
      (call
        (atom)
        (arguments
          (binary_operator
            (variable)
            (integer)))))
    (atom)
    (arguments
      (integer))
    (integer)))

================================================================================
statement flexibility with newlines
================================================================================

%% Without the newline choice in the statement rule, the second call would
%% be misparsed.
hd([a]),
tl([a])
maps:get(date,DateTime).

--------------------------------------------------------------------------------

(source
  (comment)
  (comment)
  (call
    (atom)
    (arguments
      (list
        (atom))))
  (call
    (atom)
    (arguments
      (list
        (atom))))
  (call
    (atom)
    (atom)
    (arguments
      (atom)
      (variable))))

================================================================================
specs
================================================================================

-spec ok_this(term()) -> {ok, term()}.

--------------------------------------------------------------------------------

(source
  (attribute
    (atom)
    (stab_clause
      (atom)
      (arguments
        (call
          (atom)
          (arguments)))
      (tuple
        (atom)
        (call
          (atom)
          (arguments))))))

================================================================================
attributes
================================================================================

-module(ok).
-include("records.hrl").
-export([ok_this/1]).
-dialyzer({nowarn_function, [ok_this/1]}).

--------------------------------------------------------------------------------

(source
  (attribute
    (atom)
    (arguments)
    (arguments
      (atom))
    (arguments))
  (attribute
    (atom)
    (arguments)
    (arguments
      (string
        (quoted_content)))
    (arguments))
  (attribute
    (atom)
    (arguments)
    (arguments
      (list
        (binary_operator
          (atom)
          (integer))))
    (arguments))
  (attribute
    (atom)
    (arguments)
    (arguments
      (tuple
        (atom)
        (list
          (binary_operator
            (atom)
            (integer)))))
    (arguments)))

================================================================================
type declarations
================================================================================

-type arity() :: non_neg_integer().

--------------------------------------------------------------------------------

(source
  (attribute
    (atom)
    (arguments
      (binary_operator
        (call
          (atom)
          (arguments))
        (call
          (atom)
          (arguments))))))
